import{B as h}from"./index-CJQv40Iu.js";var s=[];for(var g=0;g<256;++g)s.push((g+256).toString(16).slice(1));function u(t,e=0){return(s[t[e+0]]+s[t[e+1]]+s[t[e+2]]+s[t[e+3]]+"-"+s[t[e+4]]+s[t[e+5]]+"-"+s[t[e+6]]+s[t[e+7]]+"-"+s[t[e+8]]+s[t[e+9]]+"-"+s[t[e+10]]+s[t[e+11]]+s[t[e+12]]+s[t[e+13]]+s[t[e+14]]+s[t[e+15]]).toLowerCase()}var c,l=new Uint8Array(16);function y(){if(!c&&(c=typeof crypto<"u"&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto),!c))throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");return c(l)}var S=typeof crypto<"u"&&crypto.randomUUID&&crypto.randomUUID.bind(crypto);const m={randomUUID:S};function N(t,e,r){if(m.randomUUID&&!e&&!t)return m.randomUUID();t=t||{};var n=t.random||(t.rng||y)();return n[6]=n[6]&15|64,n[8]=n[8]&63|128,u(n)}class w{constructor(e="localStorage"){if(this.storages={localStorage:window.localStorage,sessionStorage:window.sessionStorage},!this.storages[e])throw new Error(`Storage type ${e} does not exist.`);this.type=e,this.storage=this.storages[e],this.proxy=null,this.namespace=null}initNamespaceStorage(e){const r=this.storage,n=`${e}_ns`;this.namespace=e,r.getItem(n)||r.setItem(n,JSON.stringify({})),this.proxy=new Proxy({},{get:(d,o)=>JSON.parse(r.getItem(n))[o],set:(d,o,a)=>{let i=JSON.parse(r.getItem(n));return i||(i={}),i[o]=a,r.setItem(n,JSON.stringify(i)),!0},deleteProperty:(d,o)=>{let a=JSON.parse(r.getItem(n));return a||(a={}),delete a[o],r.setItem(n,JSON.stringify(a)),!0}})}getNamespace(){return this.namespace}namespaceStorages(){const e={};for(let r=0;r<this.storage.length;r++){const n=this.storage.key(r);n.endsWith("_ns")&&(e[n.slice(0,-3)]=this.type)}return e}get(e){if(!this.proxy)throw new Error("No namespace initialized.");return this.proxy[e]}set(e,r){if(!this.proxy)throw new Error("No namespace initialized.");this.proxy[e]=r}keys(){if(!this.proxy)throw new Error("No namespace initialized.");const e=`${this.namespace}_ns`,r=JSON.parse(this.storage.getItem(e));return r?Object.keys(r):[]}remove(e){if(!this.proxy)throw new Error("No namespace initialized.");delete this.proxy[e]}clear(){if(!this.proxy)throw new Error("No namespace initialized.");const e=`${this.namespace}_ns`;this.storage.removeItem(e)}}const p=new w;p.initNamespaceStorage("imooc");const I=h("global",{state:()=>({sid:p.get("sid")||""}),actions:{setSid(t){this.sid=t,p.set("sid",t)}}});export{I as u,N as v};
